[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mapstack-backend"
version = "0.1.0"
authors = [
  { name="MapStack Team", email="info@mapstack.jp" },
]
description = "MapStack backend API service"
readme = "../README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.urls]
"Homepage" = "https://github.com/mapstack/mapstack"
"Bug Tracker" = "https://github.com/mapstack/mapstack/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "db: marks tests that require database access",
    "api: marks tests that test API endpoints",
    "unit: marks unit tests",
    "integration: marks integration tests",
]
log_cli = true
log_cli_level = "ERROR"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    "ignore::DeprecationWarning:pytest_asyncio.plugin",
    "ignore::DeprecationWarning:pydantic",
    "ignore::PendingDeprecationWarning",
    "ignore::DeprecationWarning",
    "ignore::PydanticDeprecatedSince20",
    "ignore::PydanticDeprecatedSince211",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "B", "Q", "W", "I"]
ignore = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.mccabe]
max-complexity = 10
